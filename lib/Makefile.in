# @configure_input@

### Path settings
srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
top_builddir    = @top_builddir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir	= @includedir@
datarootdir	= @datarootdir@

PACKAGE_NAME	= @PACKAGE_NAME@
PACKAGE_VERSION	= @PACKAGE_VERSION@

@ENCAP_DEFS@

SHELL           = @SHELL@

### Installation programs and flags
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@ -s
INSTALL_DATA	= @INSTALL_DATA@
LN_S		= @LN_S@
MKDIR		= @MKDIR@

### Compiler and link options
CC		= @CC@
LIBTOOL         = @LIBTOOL@
CPPFLAGS	= -I. \
		  -I.. \
		  -I${srcdir} \
		  @CPPFLAGS@
CFLAGS		= @CFLAGS@
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
LTLIBOBJS	= @LTLIBOBJS@
RANLIB		= @RANLIB@
@SET_MAKE@


### Makefile rules - no user-servicable parts below

LIBTAR_OBJS	= block.lo \
		  decode.lo \
		  extract.lo \
		  handle.lo \
		  util.lo
LIBTAR_HDRS	= ../config.h \
		  ${srcdir}/libtar.h
LIBTAR_LIBS	= ./libtar.la
ALL		= libtar.la
LDFLAGS		= @LDFLAGS@
CFLAGS		= @CFLAGS@

DISTCLEANFILES	=


all: ${ALL}

.PHONY: clean distclean install

libtar.la: ${LIBTAR_OBJS} ${LTLIBOBJS}
	$(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS) -o libtar.la $(LIBTAR_OBJS) $(LTLIBOBJS) -rpath $(libdir)
#	${AR} rc libtar.a ${LIBTAR_OBJS} ${LIBOBJS}
#	${RANLIB} libtar.a

${LIBTAR_OBJS}: ${LIBTAR_HDRS}

%.lo: $(srcdir)/%.c
	$(LIBTOOL) --mode=compile ${CC} ${CFLAGS} ${CPPFLAGS} -c -o $@ $<

%.lo: ${top_srcdir}/compat/%.c
	$(LIBTOOL) --mode=compile ${CC} ${CFLAGS} ${CPPFLAGS} -c -o $@ $<

clean:
	rm -rf *~ *.o $(LIBTAR_OBJS) ${ALL} core .libs $(LTLIBOBJS)

distclean: clean
	rm -f Makefile ${DISTCLEANFILES}

install: ${ALL}
	${MKDIR} ${DESTDIR}${libdir}
	$(LIBTOOL) --mode=install ${INSTALL_DATA} libtar.la ${DESTDIR}${libdir}
	${MKDIR} ${DESTDIR}${includedir}
	${INSTALL_DATA} ${srcdir}/libtar.h ${DESTDIR}${includedir}

